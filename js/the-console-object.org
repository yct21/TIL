* The ~console~ Object of Javascript

One of the most basic debugging tools in JavaScript is `console.log()`.

** The ~console~ Object

When using ~console~ in browser environment, the ~console~ is part of the
~window~ object, and is supplied by the Browser Object Model (BOM). BOM does not
have a set standard, so each browser implements it in slightly different ways.

Meanwhile the ~console~ module in NodeJS provides a simple debugging console that is
similar to the JavaScript console mechanism provided by web browsers. But the global
~console~ object's methods are neither consistently synchronous like the browser
APIs they resemble, nor are they consistently asynchronous like all other
Node.js streams.

Specifically, in browsers, calling ~console.assert()~ with a falsy assertion will
cause the message to be printed to the console without interrupting execution of
subsequent code. In Node.js, however, a falsy assertion will cause an
~AssertionError~ to be thrown.

** Apply custom CSS in ~console~

CSS rules can be applied using string substitution with the ~%c~ placeholder.

#+BEGIN_SRC js
const success = [
 'background: green',
 'color: white',
 'display: block',
 'text-align: center'
].join(';');

const failure = [
 'background: red',
 'color: white',
 'display: block',
 'text-align: center'
].join(';');

console.info('%c /dancing/bears was Successful!', success);

console.log({data: {
 name: 'Bob',
 age: 'unknown'
}}); // "mocked" data response

console.error('%c /dancing/bats failed!', failure);
#+END_SRC

** Methods other than ~log~, ~info~, ~warn~ and ~error~

*** ~console.assert(assertion, message)~:
Display error level log when assertion is violated.

*** ~console.dir(object)~:
Displays an interactive list of the object passed to it.

*** ~console.table(object)~:
Displays an array or object as a table

[[file:../.assets/The ~console~ Object of Javascript/1*nza7ZWxYG-_X47VJ54FtZg_2017-06-21_22-13-28.png]]

This method doesn't work in Chrome currently.

*** ~console.group()~

This would output logs in different levels

[[file:../.assets/The ~console~ Object of Javascript/1*9hJkBrf4uEXaC1PYe8bomQ_2017-06-21_22-15-43.png]]

*** ~console.time()~

A timer could be initialized in console.

#+BEGIN_SRC js
console.time("some timer id");
console.timeEnd("some timer id");

// timer output in console like this: timer: 0.57ms
#+END_SRC

** Reference
- [[https://medium.freecodecamp.com/how-to-get-the-most-out-of-the-javascript-console-b57ca9db3e6d][How to get the most out of the JavaScript console]]
- [[https://nodejs.org/api/console.html][Console Module of Node.js v8.1.2 Documentation]]
